{
  "version": "experimental",
  "tags": [
    {
      "name": "mgt-person-card",
      "path": "./src\\components\\mgt-person-card\\mgt-person-card.ts",
      "description": "Web Component used to show detailed data for a person in the\nMicrosoft Graph",
      "attributes": [
        {
          "name": "person-details",
          "description": "Set the person details to render",
          "type": "(MicrosoftGraph.User\n   *     | MicrosoftGraph.Person\n   *     | MicrosoftGraph.Contact)"
        },
        {
          "name": "person-image",
          "description": "Set the image of the person\nSet to '@' to look up image from the graph",
          "type": "string"
        },
        {
          "name": "is-expanded",
          "description": "Gets or sets whether additional details section is rendered",
          "type": "boolean"
        },
        {
          "name": "inherit-details",
          "description": "Gets or sets whether additional details should be inherited from an mgt-person parent\nUseful when used as template in an mgt-person component",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "personDetails",
          "attribute": "person-details",
          "description": "Set the person details to render",
          "type": "(MicrosoftGraph.User\n   *     | MicrosoftGraph.Person\n   *     | MicrosoftGraph.Contact)"
        },
        {
          "name": "personImage",
          "attribute": "person-image",
          "description": "Set the image of the person\nSet to '@' to look up image from the graph",
          "type": "string"
        },
        {
          "name": "isExpanded",
          "attribute": "is-expanded",
          "description": "Gets or sets whether additional details section is rendered",
          "type": "boolean"
        },
        {
          "name": "inheritDetails",
          "attribute": "inherit-details",
          "description": "Gets or sets whether additional details should be inherited from an mgt-person parent\nUseful when used as template in an mgt-person component",
          "type": "boolean"
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ],
      "cssProperties": [
        {
          "name": "--font-size",
          "description": "{Length} Font size"
        },
        {
          "name": "--font-weight",
          "description": "{Length} Font weight"
        },
        {
          "name": "--height",
          "description": "{String} Height"
        },
        {
          "name": "--background-color",
          "description": "{Color} Background color"
        }
      ]
    },
    {
      "name": "mgt-flyout",
      "path": "./src\\components\\sub-components\\mgt-flyout\\mgt-flyout.ts",
      "description": "A component to create flyout anchored to an element",
      "attributes": [
        {
          "name": "isOpen",
          "description": "Gets or sets whether the flyout is visible",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "isOpen",
          "attribute": "isOpen",
          "description": "Gets or sets whether the flyout is visible",
          "type": "string"
        }
      ]
    },
    {
      "name": "mgt-person",
      "path": "./src\\components\\mgt-person\\mgt-person.ts",
      "description": "The person component is used to display a person or contact by using their photo, name, and/or email address.",
      "attributes": [
        {
          "name": "person-query",
          "description": "allows developer to define name of person for component",
          "type": "string"
        },
        {
          "name": "user-id",
          "description": "user-id property allows developer to use id value to determine person",
          "type": "string"
        },
        {
          "name": "show-name",
          "description": "determines if person component renders user-name",
          "type": "boolean"
        },
        {
          "name": "show-email",
          "description": "determines if person component renders email",
          "type": "boolean"
        },
        {
          "name": "person-details",
          "description": "object containing Graph details on person",
          "type": "MgtPersonDetails"
        },
        {
          "name": "person-image",
          "description": "Set the image of the person\nSet to '@' to look up image from the graph",
          "type": "string"
        },
        {
          "name": "person-card",
          "description": "Sets how the person-card is invoked\nSet to PersonCardInteraction.none to not show the card",
          "type": "PersonCardInteraction",
          "default": "\"PersonCardInteraction.none\""
        }
      ],
      "properties": [
        {
          "name": "personQuery",
          "attribute": "person-query",
          "description": "allows developer to define name of person for component",
          "type": "string"
        },
        {
          "name": "userId",
          "attribute": "user-id",
          "description": "user-id property allows developer to use id value to determine person",
          "type": "string"
        },
        {
          "name": "showName",
          "attribute": "show-name",
          "description": "determines if person component renders user-name",
          "type": "boolean"
        },
        {
          "name": "showEmail",
          "attribute": "show-email",
          "description": "determines if person component renders email",
          "type": "boolean"
        },
        {
          "name": "personDetails",
          "attribute": "person-details",
          "description": "object containing Graph details on person",
          "type": "MgtPersonDetails"
        },
        {
          "name": "personImage",
          "attribute": "person-image",
          "description": "Set the image of the person\nSet to '@' to look up image from the graph",
          "type": "string"
        },
        {
          "name": "handleWindowClick"
        },
        {
          "name": "personCardInteraction",
          "attribute": "person-card",
          "description": "Sets how the person-card is invoked\nSet to PersonCardInteraction.none to not show the card",
          "type": "PersonCardInteraction",
          "default": "\"PersonCardInteraction.none\""
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ],
      "cssProperties": [
        {
          "name": "--avatar-size-s",
          "description": "{Length} Avatar size"
        },
        {
          "name": "--avatar-size",
          "description": "{Length} Avatar size when both name and email are shown"
        },
        {
          "name": "--avatar-font-size--s",
          "description": "{Length} Avatar font size"
        },
        {
          "name": "--avatar-font-size",
          "description": "{Length} Avatar font-size when both name and email are shown"
        },
        {
          "name": "--avatar-border",
          "description": "{String} Avatar border"
        },
        {
          "name": "--initials-color",
          "description": "{Color} Initials color"
        },
        {
          "name": "--initials-background-color",
          "description": "{Color} Initials background color"
        },
        {
          "name": "--font-size",
          "description": "{Length} Font size"
        },
        {
          "name": "--font-weight",
          "description": "{Length} Font weight"
        },
        {
          "name": "--color",
          "description": "{Color} Color"
        },
        {
          "name": "--email-font-size",
          "description": "{Length} Email font size"
        },
        {
          "name": "--email-color",
          "description": "{Color} Email color"
        }
      ]
    },
    {
      "name": "mgt-agenda",
      "path": "./src\\components\\mgt-agenda\\mgt-agenda.ts",
      "description": "Web Component which represents events in a user or group calendar.",
      "attributes": [
        {
          "name": "events",
          "description": "array containing events from user agenda.",
          "type": "Array<MicrosoftGraph.Event>"
        },
        {
          "name": "group-by-day",
          "description": "allows developer to define agenda to group events by day.",
          "type": "Boolean"
        },
        {
          "name": "date",
          "description": "stores current date for initial calender selection in events.",
          "type": "string"
        },
        {
          "name": "event-query",
          "description": "allows developer to specify a different graph query that retrieves events",
          "type": "string"
        },
        {
          "name": "show-max",
          "description": "allows developer to define max number of events shown",
          "type": "number"
        },
        {
          "name": "group-id",
          "description": "determines if agenda events come from specific group",
          "type": "string"
        },
        {
          "name": "days",
          "description": "sets number of days until end date, 3 is the default",
          "type": "number",
          "default": "3"
        }
      ],
      "properties": [
        {
          "name": "events",
          "attribute": "events",
          "description": "array containing events from user agenda.",
          "type": "Array<MicrosoftGraph.Event>"
        },
        {
          "name": "groupByDay",
          "attribute": "group-by-day",
          "description": "allows developer to define agenda to group events by day.",
          "type": "Boolean"
        },
        {
          "name": "date",
          "attribute": "date",
          "description": "stores current date for initial calender selection in events.",
          "type": "string"
        },
        {
          "name": "eventQuery",
          "attribute": "event-query",
          "description": "allows developer to specify a different graph query that retrieves events",
          "type": "string"
        },
        {
          "name": "showMax",
          "attribute": "show-max",
          "description": "allows developer to define max number of events shown",
          "type": "number"
        },
        {
          "name": "groupId",
          "attribute": "group-id",
          "description": "determines if agenda events come from specific group",
          "type": "string"
        },
        {
          "name": "days",
          "attribute": "days",
          "description": "sets number of days until end date, 3 is the default",
          "type": "number",
          "default": "3"
        },
        {
          "name": "onResize"
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ],
      "cssProperties": [
        {
          "name": "--event-box-shadow",
          "description": "{String} Event box shadow color and size"
        },
        {
          "name": "--event-margin",
          "description": "{String} Event margin"
        },
        {
          "name": "--event-padding",
          "description": "{String} Event padding"
        },
        {
          "name": "--event-background",
          "description": "{Color} Event background color"
        },
        {
          "name": "--event-border",
          "description": "{String} Event border color"
        },
        {
          "name": "--agenda-header-margin",
          "description": "{String} Agenda header margin size"
        },
        {
          "name": "--agenda-header-font-size",
          "description": "{Length} Agenda header font size"
        },
        {
          "name": "--agenda-header-color",
          "description": "{Color} Agenda header color"
        },
        {
          "name": "--event-time-font-size",
          "description": "{Length} Event time font size"
        },
        {
          "name": "--event-time-color",
          "description": "{Color} Event time color"
        },
        {
          "name": "--event-subject-font-size",
          "description": "{Length} Event subject font size"
        },
        {
          "name": "--event-subject-color",
          "description": "{Color} Event subject color"
        },
        {
          "name": "--event-location-font-size",
          "description": "{Length} Event location font size"
        },
        {
          "name": "--event-location-color",
          "description": "{Color} Event location color"
        }
      ]
    },
    {
      "name": "mgt-get",
      "path": "./src\\components\\mgt-get\\mgt-get.ts",
      "description": "Custom element for making Microsoft Graph get queries",
      "attributes": [
        {
          "name": "resource",
          "description": "The resource to get",
          "type": "string"
        },
        {
          "name": "scopes",
          "description": "The resource to get",
          "type": "string[]",
          "default": "[]"
        },
        {
          "name": "version",
          "description": "Api version to use for request",
          "type": "string",
          "default": "\"v1.0\""
        },
        {
          "name": "max-pages",
          "description": "Maximum number of pages to get for the resource\ndefault = 3\nif <= 0, all pages will be fetched",
          "type": "number",
          "default": "3"
        },
        {
          "name": "polling-rate",
          "description": "Number of milliseconds to poll the delta API and\nupdate the response. Set to positive value to enable",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "resource",
          "attribute": "resource",
          "description": "The resource to get",
          "type": "string"
        },
        {
          "name": "scopes",
          "attribute": "scopes",
          "description": "The resource to get",
          "type": "string[]",
          "default": "[]"
        },
        {
          "name": "version",
          "attribute": "version",
          "description": "Api version to use for request",
          "type": "string",
          "default": "\"v1.0\""
        },
        {
          "name": "maxPages",
          "attribute": "max-pages",
          "description": "Maximum number of pages to get for the resource\ndefault = 3\nif <= 0, all pages will be fetched",
          "type": "number",
          "default": "3"
        },
        {
          "name": "pollingRate",
          "attribute": "polling-rate",
          "description": "Number of milliseconds to poll the delta API and\nupdate the response. Set to positive value to enable",
          "type": "number",
          "default": "0"
        },
        {
          "name": "response",
          "description": "Gets or sets the response of the request",
          "type": "*"
        },
        {
          "name": "error",
          "description": "Gets or sets the error (if any) of the request",
          "type": "*"
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-login",
      "path": "./src\\components\\mgt-login\\mgt-login.ts",
      "description": "Web component button and flyout control to facilitate Microsoft identity platform authentication",
      "attributes": [
        {
          "name": "user-details",
          "description": "allows developer to use specific user details for login",
          "type": "MgtPersonDetails"
        }
      ],
      "properties": [
        {
          "name": "userDetails",
          "attribute": "user-details",
          "description": "allows developer to use specific user details for login",
          "type": "MgtPersonDetails"
        },
        {
          "name": "handleWindowClick"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ],
      "cssProperties": [
        {
          "name": "--font-size",
          "description": "{Length} Login font size"
        },
        {
          "name": "--font-weight",
          "description": "{Length} Login font weight"
        },
        {
          "name": "--height",
          "description": "{String} Login height percentage"
        },
        {
          "name": "--margin",
          "description": "{String} Margin size"
        },
        {
          "name": "--padding",
          "description": "{String} Padding size"
        },
        {
          "name": "--color",
          "description": "{Color} Login font color"
        },
        {
          "name": "--background-color",
          "description": "{Color} Login background color"
        },
        {
          "name": "--background-color--hover",
          "description": "{Color} Login background hover color"
        },
        {
          "name": "--popup-content-background-color",
          "description": "{Color} Popup content background color"
        },
        {
          "name": "--popup-command-font-size",
          "description": "{Length} Popup command font size"
        }
      ]
    },
    {
      "name": "mgt-people-picker",
      "path": "./src\\components\\mgt-people-picker\\mgt-people-picker.ts",
      "description": "Web component used to search for people from the Microsoft Graph",
      "attributes": [
        {
          "name": "people",
          "description": "containing object of MgtPersonDetails.",
          "type": "MgtPersonDetails"
        },
        {
          "name": "group-id",
          "description": "value determining if search is filtered to a group.",
          "type": "string"
        },
        {
          "name": "show-max",
          "description": "determining how many people to show in list.",
          "type": "number",
          "default": "6"
        },
        {
          "name": "selected-people",
          "description": "array of user picked people.",
          "type": "Array<any>",
          "default": "[]"
        }
      ],
      "properties": [
        {
          "name": "people",
          "attribute": "people",
          "description": "containing object of MgtPersonDetails.",
          "type": "MgtPersonDetails"
        },
        {
          "name": "groupId",
          "attribute": "group-id",
          "description": "value determining if search is filtered to a group.",
          "type": "string"
        },
        {
          "name": "showMax",
          "attribute": "show-max",
          "description": "determining how many people to show in list.",
          "type": "number",
          "default": "6"
        },
        {
          "name": "selectedPeople",
          "attribute": "selected-people",
          "description": "array of user picked people.",
          "type": "Array<any>",
          "default": "[]"
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ],
      "cssProperties": [
        {
          "name": "--people-list-background-color",
          "description": "{Color} People list background color"
        },
        {
          "name": "--accent-color",
          "description": "{Color} Accent color"
        }
      ]
    },
    {
      "name": "mgt-people",
      "path": "./src\\components\\mgt-people\\mgt-people.ts",
      "description": "web component to display a group of people or contacts by using their photos or initials.",
      "attributes": [
        {
          "name": "people",
          "description": "containing array of people used in the component.",
          "type": "Array<MgtPersonDetails>"
        },
        {
          "name": "group-id",
          "description": "determines if agenda events come from specific group",
          "type": "string"
        },
        {
          "name": "user-ids",
          "description": "user id array",
          "type": "string[]"
        },
        {
          "name": "person-card",
          "description": "Sets how the person-card is invoked\nSet to PersonCardInteraction.none to not show the card",
          "type": "PersonCardInteraction",
          "default": "\"PersonCardInteraction.hover\""
        },
        {
          "name": "show-max",
          "description": "developer determined max people shown in component",
          "type": "number",
          "default": "3"
        }
      ],
      "properties": [
        {
          "name": "people",
          "attribute": "people",
          "description": "containing array of people used in the component.",
          "type": "Array<MgtPersonDetails>"
        },
        {
          "name": "groupId",
          "attribute": "group-id",
          "description": "determines if agenda events come from specific group",
          "type": "string"
        },
        {
          "name": "userIds",
          "attribute": "user-ids",
          "description": "user id array",
          "type": "string[]"
        },
        {
          "name": "personCardInteraction",
          "attribute": "person-card",
          "description": "Sets how the person-card is invoked\nSet to PersonCardInteraction.none to not show the card",
          "type": "PersonCardInteraction",
          "default": "\"PersonCardInteraction.hover\""
        },
        {
          "name": "showMax",
          "attribute": "show-max",
          "description": "developer determined max people shown in component",
          "type": "number",
          "default": "3"
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ],
      "cssProperties": [
        {
          "name": "--list-margin",
          "description": "{String} List margin for component"
        },
        {
          "name": "--avatar-margin",
          "description": "{String} Margin for each person"
        }
      ]
    },
    {
      "name": "mgt-arrow-options",
      "path": "./src\\components\\sub-components\\mgt-arrow-options\\mgt-arrow-options.ts",
      "description": "Custom Component used to handle an arrow rendering for TaskGroups utilized in the task component.",
      "attributes": [
        {
          "name": "open",
          "description": "Determines if header menu is rendered or hidden.",
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "Title of chosen TaskGroup.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "options",
          "description": "Menu options to be rendered with an attached MouseEvent handler for expansion of details",
          "type": "object",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "open",
          "attribute": "open",
          "description": "Determines if header menu is rendered or hidden.",
          "type": "boolean"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Title of chosen TaskGroup.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "options",
          "attribute": "options",
          "description": "Menu options to be rendered with an attached MouseEvent handler for expansion of details",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-dot-options",
      "path": "./src\\components\\sub-components\\mgt-dot-options\\mgt-dot-options.ts",
      "description": "Custom Component used to handle an arrow rendering for TaskGroups utilized in the task component.",
      "attributes": [
        {
          "name": "open",
          "description": "Determines if header menu is rendered or hidden.",
          "type": "boolean"
        },
        {
          "name": "options",
          "description": "Menu options to be rendered with an attached MouseEvent handler for expansion of details",
          "type": "{ [option: string]: (e: MouseEvent) => any; }"
        }
      ],
      "properties": [
        {
          "name": "open",
          "attribute": "open",
          "description": "Determines if header menu is rendered or hidden.",
          "type": "boolean"
        },
        {
          "name": "options",
          "attribute": "options",
          "description": "Menu options to be rendered with an attached MouseEvent handler for expansion of details",
          "type": "{ [option: string]: (e: MouseEvent) => any; }"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-tasks",
      "path": "./src\\components\\mgt-tasks\\mgt-tasks.ts",
      "description": "component enables the user to view, add, remove, complete, or edit tasks. It works with tasks in Microsoft Planner or Microsoft To-Do.",
      "attributes": [
        {
          "name": "read-only",
          "description": "determines if tasks are un-editable",
          "type": "boolean"
        },
        {
          "name": "data-source",
          "description": "determines which task source is loaded, either planner or todo",
          "type": "string",
          "default": "\"TasksSource.planner\""
        },
        {
          "name": "target-id",
          "description": "if set, the component will only show tasks from either this plan or group",
          "type": "string"
        },
        {
          "name": "target-bucket-id",
          "description": "if set, the component will only show tasks from this bucket or folder",
          "type": "string"
        },
        {
          "name": "initial-id",
          "description": "if set, the component will first show tasks from this plan or group",
          "type": "string"
        },
        {
          "name": "initial-bucket-id",
          "description": "if set, the component will first show tasks from this bucket or folder",
          "type": "string"
        },
        {
          "name": "hide-header",
          "description": "sets whether the header is rendered",
          "type": "boolean"
        },
        {
          "name": "hide-options",
          "description": "sets whether the options are rendered",
          "type": "boolean"
        },
        {
          "name": "group-id",
          "description": "allows developer to define specific group id",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "res",
          "description": "determines whether todo, or planner functionality for task component",
          "type": "{ BASE_SELF_ASSIGNED: string; BUCKETS_SELF_ASSIGNED: string; BUCKET_NOT_FOUND: string; PLANS_SELF_ASSIGNED: string; PLAN_NOT_FOUND: string; }"
        },
        {
          "name": "isNewTaskVisible",
          "description": "Get whether new task view is visible",
          "type": "boolean"
        },
        {
          "name": "readOnly",
          "attribute": "read-only",
          "description": "determines if tasks are un-editable",
          "type": "boolean"
        },
        {
          "name": "dataSource",
          "attribute": "data-source",
          "description": "determines which task source is loaded, either planner or todo",
          "type": "string",
          "default": "\"TasksSource.planner\""
        },
        {
          "name": "targetId",
          "attribute": "target-id",
          "description": "if set, the component will only show tasks from either this plan or group",
          "type": "string"
        },
        {
          "name": "targetBucketId",
          "attribute": "target-bucket-id",
          "description": "if set, the component will only show tasks from this bucket or folder",
          "type": "string"
        },
        {
          "name": "initialId",
          "attribute": "initial-id",
          "description": "if set, the component will first show tasks from this plan or group",
          "type": "string"
        },
        {
          "name": "initialBucketId",
          "attribute": "initial-bucket-id",
          "description": "if set, the component will first show tasks from this bucket or folder",
          "type": "string"
        },
        {
          "name": "hideHeader",
          "attribute": "hide-header",
          "description": "sets whether the header is rendered",
          "type": "boolean"
        },
        {
          "name": "hideOptions",
          "attribute": "hide-options",
          "description": "sets whether the options are rendered",
          "type": "boolean"
        },
        {
          "name": "groupId",
          "attribute": "group-id",
          "description": "allows developer to define specific group id",
          "type": "string"
        },
        {
          "name": "taskFilter",
          "description": "Optional filter function when rendering tasks",
          "type": "(task: PlannerTask | OutlookTask) => boolean"
        },
        {
          "name": "onResize"
        },
        {
          "name": "templateContext",
          "description": "Additional data context to be used in template binding\nUse this to add event listeners or value converters",
          "type": "*"
        },
        {
          "name": "templateConverters",
          "description": "Collection of functions to be used in template binding",
          "type": "*",
          "deprecatedMessage": "since 1.2 - use templateContext instead"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-msal-provider",
      "path": "./src\\components\\providers\\mgt-msal-provider.ts",
      "description": "Authentication Library Provider for Microsoft personal accounts",
      "attributes": [
        {
          "name": "client-id",
          "description": "String alphanumerical value relation to a specific user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "login-type",
          "description": "The login type that should be used: popup or redirect"
        },
        {
          "name": "authority",
          "description": "The authority to use."
        },
        {
          "name": "scopes",
          "description": "Comma separated list of scopes"
        },
        {
          "name": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        }
      ],
      "properties": [
        {
          "name": "clientId",
          "attribute": "client-id",
          "description": "String alphanumerical value relation to a specific user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "loginType",
          "attribute": "login-type",
          "description": "The login type that should be used: popup or redirect"
        },
        {
          "name": "authority",
          "attribute": "authority",
          "description": "The authority to use."
        },
        {
          "name": "scopes",
          "attribute": "scopes",
          "description": "Comma separated list of scopes"
        },
        {
          "name": "provider",
          "description": "The IProvider created by this component",
          "type": "IProvider"
        },
        {
          "name": "isAvailable",
          "description": "Gets whether this provider can be used in this environment",
          "type": "boolean"
        },
        {
          "name": "dependsOn",
          "attribute": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-teams-provider",
      "path": "./src\\components\\providers\\mgt-teams-provider.ts",
      "description": "Authentication Library Provider for Microsoft Teams accounts",
      "attributes": [
        {
          "name": "client-id",
          "description": "String alphanumerical value relation to a specific user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "auth-popup-url",
          "description": "The relative or absolute path of the html page that will handle the authentication",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "scopes",
          "description": "Comma separated list of scopes."
        },
        {
          "name": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        }
      ],
      "properties": [
        {
          "name": "clientId",
          "attribute": "client-id",
          "description": "String alphanumerical value relation to a specific user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "authPopupUrl",
          "attribute": "auth-popup-url",
          "description": "The relative or absolute path of the html page that will handle the authentication",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "scopes",
          "attribute": "scopes",
          "description": "Comma separated list of scopes."
        },
        {
          "name": "provider",
          "description": "The IProvider created by this component",
          "type": "IProvider"
        },
        {
          "name": "isAvailable",
          "description": "Gets whether this provider can be used in this environment",
          "type": "boolean"
        },
        {
          "name": "dependsOn",
          "attribute": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-wam-provider",
      "path": "./src\\components\\providers\\mgt-wam-provider.ts",
      "description": "Authentication Library Provider for Web Account Manager (UWP apps)",
      "attributes": [
        {
          "name": "client-id",
          "description": "String alphanumerical value relation to a specific user",
          "type": "string"
        },
        {
          "name": "authority",
          "description": "Url used for login",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "clientId",
          "attribute": "client-id",
          "description": "String alphanumerical value relation to a specific user",
          "type": "string"
        },
        {
          "name": "authority",
          "attribute": "authority",
          "description": "Url used for login",
          "type": "string"
        }
      ]
    },
    {
      "name": "mgt-proxy-provider",
      "path": "./src\\components\\providers\\mgt-proxy-provider.ts",
      "description": "Authentication component for ProxyProvider",
      "attributes": [
        {
          "name": "graph-proxy-url",
          "description": "The base url to the proxy api",
          "type": "string"
        },
        {
          "name": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        }
      ],
      "properties": [
        {
          "name": "graphProxyUrl",
          "attribute": "graph-proxy-url",
          "description": "The base url to the proxy api",
          "type": "string"
        },
        {
          "name": "provider",
          "description": "The IProvider created by this component",
          "type": "IProvider"
        },
        {
          "name": "isAvailable",
          "description": "Gets whether this provider can be used in this environment",
          "type": "boolean"
        },
        {
          "name": "dependsOn",
          "attribute": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    },
    {
      "name": "mgt-mock-provider",
      "path": "./src\\mock\\mgt-mock-provider.ts",
      "description": "Sets global provider to a mock Provider",
      "attributes": [
        {
          "name": "signed-out",
          "description": "A property to allow the developer to start the sample logged out if they desired."
        },
        {
          "name": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        }
      ],
      "properties": [
        {
          "name": "signedOut",
          "attribute": "signed-out",
          "description": "A property to allow the developer to start the sample logged out if they desired."
        },
        {
          "name": "provider",
          "description": "The IProvider created by this component",
          "type": "IProvider"
        },
        {
          "name": "isAvailable",
          "description": "Gets weather this provider can be used in this environment",
          "type": "boolean"
        },
        {
          "name": "dependsOn",
          "attribute": "depends-on",
          "description": "Higher priority provider that should be initialized before attempting\nto initialize this provider. This provider will only be initialized\nif all higher priority providers are not available.",
          "type": "MgtBaseProvider"
        },
        {
          "name": "mediaQuery",
          "description": "Gets the ComponentMediaQuery of the component",
          "type": "ComponentMediaQuery"
        }
      ],
      "events": [
        {
          "name": "updated"
        }
      ]
    }
  ]
}