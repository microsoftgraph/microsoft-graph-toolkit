# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Create Preview release
on:
  push:
    tags: ['v3.*-preview.*', 'v3.*-rc.*']

jobs:
  version:
    runs-on: ubuntu-latest

    outputs:
      latest-version: ${{steps.latest-version.outputs.version}}
      package-version: ${{steps.package-version.outputs.current-version}}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Get latest version from npm
        id: latest-version
        run: echo ::set-output name=version::$(npm show @microsoft/mgt version)

      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

  release:
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.latest-version != needs.version.outputs.package-version
    strategy:
      matrix:
        node-version: [18.x]

    environment:
      name: release

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: |
          npm install -g yarn lerna
          yarn

      - name: Update package version
        run: node scripts/setVersion.js

      - name: Build ðŸ› 
        run: yarn build

      - name: Publish npm packages
        run: lerna exec --scope @microsoft/* -- "npm publish --tag preview --access=public"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Attach mgt-spfx solution to GitHub release
        run: node scripts/uploadSpfxSolution.js ${{secrets.GITHUB_TOKEN}} ${{needs.version.outputs.package-version}}

      - name: ReleaseNotes
        uses: anton-yurchenko/git-release@v5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: 'true'
          PRE_RELEASE: 'true'
          CHANGELOG_FILE: 'CHANGELOG.md'
          ALLOW_EMPTY_CHANGELOG: 'true'
