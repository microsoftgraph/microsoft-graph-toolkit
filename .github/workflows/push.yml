# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release main

on:
  push:
    branches: [main]
    paths:
      - 'packages/**'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'microsoftgraph/microsoft-graph-toolkit'
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: |
          npm install -g yarn lerna
          yarn

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Set Preview Version
        run: node scripts/setVersion.js --next

      - name: Build ðŸ› 
        run: yarn build
      - run: yarn test
      - name: Fix code coverage paths
        run: |
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage/lcov-report/index.html

      - name: Archive coverage/lcov-report/index.html
        uses: actions/upload-artifact@v2 # upload coverage lcov.info
        if: always() # run this step even if previous step failed
        with:
          name: coverage
          path: coverage/lcov-report/index.html
      - name: Publish preview packages ðŸš€
        run: lerna exec --scope @microsoft/* -- "npm publish --tag next --access=public"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Configuration to run a SonarCloud analysis on main branch
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download coverage artifacts with cli
        run: |
          gh run download ${{ github.event.workflow_run.id }} -n coverage

      - name: Run sonar cloud analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
