trigger:
  - main

pool:
  vmImage: 'Ubuntu-16.04'
  demands: npm

steps:
  - task: NodeTool@0
    displayName: 'Use Node 10.*'
    inputs:
      versionSpec: '10.*'

  - task: Npm@1
    displayName: 'npm version'
    inputs:
      command: custom
      verbose: false
      customCommand: '--no-git-tag-version version $(baseVersionNumber).$(Build.BuildId)'

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      verbose: false

  - task: Npm@1
    displayName: 'npm run build'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run build'
  #- task: Npm@1
  #  displayName: 'npm test'
  #  inputs:
  #    command: custom
  #    verbose: false
  #    customCommand: test
  # - task: PublishTestResults@2
  #   displayName: 'Publish Test Results testResults/junit.xml'
  #   inputs:
  #     testResultsFiles: testResults/junit.xml
  #   condition: succeededOrFailed()
  # - task: PublishCodeCoverageResults@1
  #   displayName: 'Publish code coverage from $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
  #   inputs:
  #     codeCoverageTool: Cobertura
  #     summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
  #     reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
  #   condition: succeededOrFailed()
  # - task: DeleteFiles@1
  #   displayName: 'Delete files from $(System.DefaultWorkingDirectory)'
  #   inputs:
  #     SourceFolder: '$(System.DefaultWorkingDirectory)'
  #     Contents: |
  #       .git
  #       node_modules
  #       coverage
  #       testResults
  #       .gitignore
  # - task: ArchiveFiles@2
  #   displayName: 'Archive $(Build.BinariesDirectory)'
  #   inputs:
  #     rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
  #     includeRootFolder: false
  #     archiveFile: '$(Build.ArtifactStagingDirectory)/mgt-$(baseVersionNumber).$(Build.BuildId).zip'
  # - task: PublishBuildArtifacts@1
  #   displayName: 'Publish Artifact: drop'
